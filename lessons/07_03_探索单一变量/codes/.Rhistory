qplot(x = friend_count, data = pf[! is.nan(pf$gender)], binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = pf[!is.nan(pf$gender)], binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
pf[!is.nan(pf$gender)]
!is.nan(pf$gender)
pf!is.nan(pf$gender)
pf[!is.nan(pf$gender)]
subset(pf, !is.nan(gender))
qplot(x = friend_count, data = subset(pf, !is.nan(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.nan(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.nan(pf$gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.na(pf$gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender, ncol = 2)
pf[!is.na(pf$gender)]
!is.na(pf$gender)
pf[!is.na(pf$gender)]
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
View(pf)
qplot(x = tenure, data = df,
color = I('boack'), fill = I('#099DD9'))
qplot(x = tenure, data = df,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = df,
color = 'black', fill = '#099DD9')
qplot(x = tenure, data = df,
color = ('black'), fill = ('#099DD9'))
qplot(x = tenure, data = df, binwidth = 30,
color = ('black'), fill = ('#099DD9'))
qplot(x = tenure, data = df, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = df, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 365,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure/365, data = pf, binwidth = 1,
color = I('black'), fill = I('#F79420'))
qplot(x = tenure/365, data = pf, binwidth = 0.25,
color = I('black'), fill = I('#F79420'))
qplot(x = tenure/365, data = pf, binwidth = 0.25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7))
qplot(x = tenure/365, data = pf, binwidth = 0.25,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample'
color = I('black'), fill = I('#F79420')) +
qplot(x = tenure/365, data = pf, binwidth = 0.25,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7))
names(pf)
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#5760AB')))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#5760AB'))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#5760AB')) +
scale_x_continuous(breaks = seq(0,113,5))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Ages of users in Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#5760AB')) +
scale_x_continuous(breaks = seq(0,113,5))
qplot(x = tenure, data = pf, binwidth = 1,
color = I('black'), fill = I('#099DD9'))
library(ggplot2)
qplot(x = tenure, data = pf, binwidth = 1,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
pf = read.csv('pseudo_facebook.tsv', sep='\t')
names(pf) # 查看列表名
pf = read.csv('pseudo_facebook.tsv', sep='\t')
names(pf) # 查看列表名
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 1,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 10,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 100,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 300,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
View(pf)
View(pf)
qplot(x = tenure/365, data = pf, binwidth = 0.25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7))
seq(0, 1000, 50)
seq(1,7,1)
c(1,7)
qplot(x = tenure/365, data = pf, binwidth = 0.25, # binwidth是每一条直方的宽度
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7)) # breaks是x轴上出现的数值，limits是x轴显示范围。
qplot(x = tenure/365, data = pf, binwidth = 0.25, # binwidth是每一条直方的宽度
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7)) # breaks是x轴上出现的数值，limits是x轴显示范围。
```{r Labeling Plots}
qplot(x = tenure/365, data = pf, binwidth = 0.25,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1,7,1), limits=c(0,7))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Ages of users in Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#5760AB')) +
scale_x_continuous(breaks = seq(0,113,5))
qplot(x = friend_count, data = df)
qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
qplot(x = log10(friend_count + 1), data = pf)
qplot(x = sqrt(friend_count), data = pf)
qplot(x = friend_count, data = pf)
install.packages('gridExtra')
qplot(x = friend_count, data = pf) +
scale_y_log10()
qplot(x = friend_count+1, data = pf) +
scale_y_log10()
p1 = qplot(x = friend_count, data = pf)
p2 = qplot(x = log10(friend_count + 1), data = pf)
p3 = qplot(x = sqrt(friend_count), data = pf)
grid.arrange(p1, p2, p3, ncol=2)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=2)
grid.arrange(p1, p2, p3, ncol=1)
grid.arrange(p1, p2, p3, ncol=3)
grid.arrange(p1, p2, p3, ncol=2)
grid.arrange(p1, p2, p3, ncol=2)
p1 = ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=2)
logScale = gplot(x = log10(friend_count+1), data = pf)
logScale = qplot(x = log10(friend_count+1), data = pf)
countScale = ggplot(aes(x = firend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
countScale = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
ggplot(aes(x = friend_count), data = pf) + scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10)+
scale_x_continuous(lim = c(0, 1000), break = seq(0, 1000, 50))+
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10)+
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))+
facet_wrap(~gender)
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqploy',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqploy',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..density../sum(..density..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
View(pf)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_x_log10()
qplot(x = www_likes, y = count,
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_lot10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
pf$gender = 'male'
pf = read.csv('pseudo_facebook.tsv', sep='\t')
View(pf)
pf$gender is 'male'
pf$gender == 'male'
pf[pf$gender == 'male']
subset(pf, pf$gender == 'male')
summary(subset(pf, pf$gender == 'male'))
table(subset(pf, pf$gender == 'male'))
by(pf$www_likes, pf$gender, summary)
table(pf$gender)
sum(pf$gender == 'male')
pf$gender == 'male'
len(pf$gender == 'male')
lengh(pf$gender == 'male')
length(pf$gender == 'male')
subset(pf, pf$gender == 'male')
subset(pf, pf$gender == 'male')$www_likes
by(pf$www_likes, pf$gender, sum)
by(pf$www_likes, pf$gender, sum)
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
grid.arrange(p1, p2, p3, p4, ncol = 2)
p1 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
p2 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
p3 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
p4 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
grid.arrange(p1, p2, p3, p4, ncol = 2)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
names(pf)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$gender, pf$friendships_initiated, summary)
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in = NA
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
summary(pf$mobile_check_in)
pf$mobile_check_in = factor(pf$mobile_check_in)
pf$mobile_check_in = factor(pf$mobile_check_in)# factor转换数据为字符型或数字型，用作比较
summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
mobile_check_in = NA
mobile_check_in = NA
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in)
pf$mobile_check_in = bool(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = bool(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
sum(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
length(pf$mobile_check_in)
63947 / length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1) / length(pf$mobile_check_in)
grid.arrange(p1, p2, p3, ncol=2)
p1 = ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=2)
logScale = qplot(x = log10(friend_count+1), data = pf)
countScale = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
view(diamonds)
view(diamonds)
diamonds
names(diamonds)
summary(diamonds)
data(diamonds)
pf = data(diamonds)
length(diamonds)
table(diamonds)
str(diamonds)
dim(diamonds)
str(diamonds)
summary(diamonds)
?diamonds
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds, binwidth = 30)
qplot(x = price, data = diamonds, binwidth = 300)
qplot(x = price, data = diamonds)
summary(diamonds$price)
diamonds$price < 500
length(diamonds$price < 500)
length(diamonds$price < 250)
diamonds[diamonds$price < 250]
subset(diamonds, diamonds$price < 500)
length(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 250))
dim(subset(diamonds, diamonds$price < 250))
diamonds
diamonds$price
str(diamonds)
diamonds$price < 250
dim(subset(diamonds, diamonds$price > 1500))
View(diamonds)
summary(diamonds)
dim(subset(diamonds, diamonds$price >= 1500))
dim(subset(diamonds, diamonds$price <= 500))
dim(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 250))
dim(subset(diamonds, diamonds$price > 1500))
dim(subset(diamonds, diamonds$price >= 1500))
