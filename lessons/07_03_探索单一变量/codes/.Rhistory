ggplot(aes(x = price/carat), data = diamonds, binwidth = 10) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds, binwidth = 1) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat, binwidth = 1), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot')
qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
library(gridExtra)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
grid.arrange(p1, p2, p3, ncol = 2)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot')
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot')
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot')
grid.arrange(p1, p2, p3, ncol = 2)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 15000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 15000))
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
grid.arrange(p1, p2, p3, ncol = 2)
qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
by(diamonds$price, diamonds$color, summary)
IQR(subset(diamonds, color == 'D')$price)
4214-911
IQR(subset(diamonds, color == 'J')$price)
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot')
qplot(x = price, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = carat)
qplot(x = carat, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = cut)
qplot(x = carat, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = color)
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot')
qplot(x = color, y = price/carat,
data = diamonds)
qplot(x = carat,
data = diamonds)
qplot(x = carat, data = diamonds)
qplot(x = carat, data = diamonds, binwidth = 0.1)
qplot(x = carat, data = diamonds, binwidth = 0.01)
qplot(x = carat, data = diamonds, binwidth = 0.1)
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 100))
seq(0, 5, 100)
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.1))
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
qplot(x = carat, data = diamonds, binwidth = 0.01) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
table(diamonds$carat)
md = read.csv('indicator age of marriage.csv', header = T, row.names = 1, check.names = F)
View(md)
dim(md)
str(md)
View(md)
qplot(x = 1989, data = diamonds)
library(ggplot2)
qplot(x = 1989, data = diamonds)
qplot(x = '1989', data = diamonds)
qplot(data = diamonds)
View(md)
qplot(x = 1989, data = md)
qplot(x = '1989', data = md)
qplot(x = 2005, data = md)
str(md)
md$2005
md$1989
md
md$`2005`
md$`2005`
md$'2005'
summary(md$'2005')
qplot(x = '2005', data = md)
md$'2005'
md$'2005'[1]
md$'2005'[1] + 1
md$'2005'[1] + 1
md$'2005'[2]
md$'2005'[3]
md$'2005'[4]
md$'2005'[5]
qplot(x = '2005', data = subset(md, !is.na('2005')))
qplot(x = '2005', data = subset(md, !is.na('2005'))) +
scale_x_continuous(lim = c(0, 25))
qplot(x = '2005', data = subset(md, !is.na('2015')))
qplot(x = '2005', data = subset(md, !is.na('2015'))) +
scale_x_continuous(lim = c(0, 25))
qplot(x = '2005', data = subset(md, !is.na('2015'))) +
scale_x_discrete(lim = c(0, 25))
qplot(x = '2005', data = subset(md, !is.na('2015')))
t(md)
md = t(md)
dim(md)
View(md)
str(md)
summary(md$'2005')
qplot(x = '2005', data = subset(md, !is.na('2015')))
View(md)
qplot(x = '2005', data = md)
qplot(x = 'China', data = md)
qplot(x = China, data = md)
md
md$China
md$'China'
md$2005
md$'2005'
md
summary(md)
md$Taiwan
md$'Taiwan'
library(ggplot2)
?diamonds
data(diamonds)
dim(diamonds)
View(diamonds)
qplot(x = price, data = diamonds)
md = read.csv('indicator age of marriage.csv')
View(md)
md = read.csv('indicator age of marriage.csv', header = T)
View(md)
md = read.csv('indicator age of marriage.csv', header = T,row.names = 1)
md = read.csv('indicator age of marriage.csv', header = T, check.names = F)
qplot(x = '2005', data = subset(md, !is.na('2015')))
str(md)
summary(md$'2005')
qplot(x = '2005', data = subset(md, !is.na('2015')))
subset(md, !is.na(2015))
subset(md, !is.na(2015))
subset(md, !is.na('2015'))
subset(md, !is.na('2005'))
subset(md, !is.na(2005))
subset(md, !is.na(2005))
md$2005
md$'2005'
is.na(md$'2005')
!is.na(md$'2005')
subset(md, !is.na(md$'2005'))
subset(md, !is.na('2005'))
subset(md, !is.na(md$'2005'))
qplot(x = '2005', data = subset(md, !is.na(md$'2015')))
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
data_1 = subset(md, !is.na(md$'2005'))
View(data_1)
data_1$'2005'
summary(data_1$'2005')
data_1$'2005'[2]
data_1$'2005'[1]
data_1$'2005'
qplot(x = '2005', data = data_1)
qplot(x = 2005, data = data_1)
ggplot(aes = (x = '2005'), data = data_1) +
geom_histogram()
ggplot(aes = (x = '2005'), data = data_1) +
geom_histogram()
ggplot(aes(x = '2005'), data = data_1) +
geom_histogram()
ggplot(aes(x = '2005', y = ..count..), data = data_1) +
geom_histogram()
qplot(x = '2005', y = ..count.., data = subset(md, !is.na(md$'2005')))
qplot(x = '2005', y = ..count.., data = subset(md, !is.na(md$'2005')))
ggplot(aes(x = '2005', y = ..count..), data = data_1) +
geom_histogram()
ggplot(aes(x = '2005', y = ..count..), data = data_1) +
geom_histogram() +
stat = 'count?'
ggplot(aes(x = '2005', y = ..count..), data = data_1) +
geom_histogram()
count?
y = ..count..y = ..count..
?ggplot
library(ggplot2)
md = read.csv('indicator age of marriage.csv', header = T, check.names = F)
dim(md)
str(md)
qplot(x = '2005', y = ..count.., data = subset(md, !is.na(md$'2005')))
ggplot(aes(x = '2005'), data = data_1) +
geom_histogram()
data_1 = subset(md, !is.na(md$'2005'))
View(data_1)
ggplot(aes(x = '2005'), data = data_1) +
geom_histogram()
md = read.csv('indicator age of marriage.csv', header = T, row.names = 1, check.names = F)
View(md)
subset(md, !is.na(md$'2005'))
summary(md$'2005')
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
data(diamonds)
dim(diamonds)
View(diamonds)
qplot(x = price, data = diamonds)
diamonds$price
diamonds$price[1]
diamonds$price[2]
md$'2005'[2]
md$'2005'[1]
md$'2005'[0]
md$'2005'[10]
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
qplot(x = '2005', data = subset(md, !is.na(md$'2005')), binwidth = 0.5)
qplot(x = '2005', data = subset(md, !is.na(md$'2005')), binwidth = 1)
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
View(md)
qplot(x = '2005', data = subset(md, !is.na(md$'2005'))) +
scale_x_continuous(limits = c(20, 25))
qplot(x = '2005', data = subset(md, !is.na(md$'2005'))) +
scale_x_discrete(limits = c(20, 25))
qplot(x = '2005', data = subset(md, !is.na(md$'2005'))) +
scale_x_discrete(limits = c(2004, 2006))
qplot(x = '2005', data = subset(md, !is.na(md$'2005'))) +
scale_x_discrete(limits = c(2005, 2006))
qplot(x = '2005', data = subset(md, !is.na(md$'2005'))) +
scale_x_discrete(limits = c(2005, 2005))
subset(md, !is.na(md$'2005'))
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram()
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_line
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_line()
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_bar()
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_bar(stat = 'count')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_bar(stat = 'count')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'bin')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'count')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'identity')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'bin')
bin
bin
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'bin')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram()
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'bin')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'count')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'count', binwidth=0.5)
import pandas as pf
md
md$'2005'
data_1 = md$'2005'
data_1
qplot(data = subset(data_1, !is.na(data_1$'2005')))
qplot(data = subset(data_1, !is.na('2005')))
qplot(data = data_1)
library(ggplot2)
bd = read.csv('birthdaysExample.csv')
View(bd)
bd
View(bd)
bd = read.csv('bd.csv')
View(bd)
bd = read.csv('bd.csv', header = T, row.names = 1, check.names = F)
bd = read.csv('bd.csv', header = T, row.names = 1, check.names = F)
View(bd)
View(bd)
bd = read.csv('bd.csv')
View(bd)
bd = read.csv('bd.csv')
bd = read.csv('bd.csv')
View(bd)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
bd = read.csv('bd.csv', header = T)
bd
bd$Title
library(readr)
bd <- read_csv("G:/baiduDrive/online_course/udacity/DA/lessons/07_03_探索单一变量/codes/bd.csv",
col_types = cols(End = col_datetime(format = "%m/%d/%Y %H:%M"),
Start = col_datetime(format = "%m/%d/%Y %H:%M")))
View(bd)
bd = read.csv('bd.csv', header = T)
bd = read_csv("bd.csv",
col_types = cols(End = col_datetime(format = "%m/%d/%Y %H:%M"),
Start = col_datetime(format = "%m/%d/%Y %H:%M")))
bd = read_csv("bd.csv",
col_types = cols(End = col_datetime(format = "%m/%d/%Y %H:%M"),
Start = col_datetime(format = "%m/%d/%Y %H:%M"),
Duration = col_time(format = "%H:%M")))
View(bd)
bd = read_csv("bd.csv",
col_types = cols(End = col_datetime(format = "%m/%d/%Y %H:%M"),
Start = col_datetime(format = "%m/%d/%Y %H:%M"),
Duration = col_character()))
View(bd)
bd$Start
bd$Start[1]
strptime(bd$Start[1], "%y/%m/%d")
bd$Start[1]
bd$Start[1][1]
bd$Start[1][2]
bd$Start[1][1]
bd$Start[1][1][1]
bd$Start[1]
bd = read_csv("bd.csv",
col_types = cols(End = col_character(),
Start = col_character(),
Duration = col_character()))
bd$Start[1]
strptime(bd$Start[1], "%m/%d/%y %H:%M")
strptime(bd$Start[1], "%m/%d/%Y %H:%M")
strptime(bd$Start[1], "%m/%d/%Y")
strptime(bd$Start[1], "%m/%d/%Y")
strptime(bd$Start[1], "%m/%d")
strptime(bd$Start[1], "%m/%d")
strptime(bd$Start[1])
strptime(bd$Start[1], '%m/%d')
strptime(bd$Start, '%m/%d')
a = strptime(bd$Start, '%m/%d')
a[1]
bd$Start[1]
bd$Start[1][1]
bd$Start[1][1:2]
bd$Start[1][1:34]
bd$Start[1][1,2]
bd$Start[1](1:2)
bd$Start[1][2]
bd$Start[1][1]
bd$Start[1]
as.Date(bd$Start[1], format = "%m/%d/%y")
as.Date(bd$Start[1], format = "%m/%d/%Y")
as.Date(bd$Start[1], format = "%m/%d")
as.Date(bd$Start, format = "%m/%d")
bd$bday = as.Date(bd$Start, format = "%m/%d")
View(bd)
bd$Title[1]
bd$Title[2]
bd$Title[1]
bd$Title[1][2]
strsplit(bd$Title[1], '的')
strsplit(bd$Title[1], '的')[1]
substr(bd$Title[1], -3, -1)
substr(bd$Title[1], 1, 2)
substr(bd$Title[1], -5, -1)
chartr('的生日', '', bd$Title[1])
gsub('的生日', '', bd$Title[1])
gsub('的生日', '', bd$Title)
bd$Title = gsub('的生日', '', bd$Title)
gsub('的生日', '', bd$Title)
bd$Title = gsub('的生日', '', bd$Title)
View(bd)
bd$Title == '王毅俊'
bd[bd$Title == '王毅俊']
subset(bd, bd$Title == '王毅俊')
subset(bd, bd$Title == '王毅俊')$bday
subset(bd, bd$bday == my_bd)
my_bd = subset(bd, bd$Title == '王毅俊')$bday
subset(bd, bd$bday == my_bd)
subset(bd, bd$bday == my_bd)$Title
bd$bday[1]
as.Date(bd$bday[1])
as.Date(bd$bday[1], by = 'month')
format(bd$bday[1]), '%m')
format(bd$bday[1], '%m')
format(bd$bday, '%m')
bd$bmonth = format(bd$bday, '%m')
View(bd)
table(bd$bmonth)
same_bd = subset(bd, bd$bday == my_bd)$Title # 2,
library(ggplot2)
library(readr)
bd = read_csv("bd.csv",
col_types = cols(End = col_character(),
Start = col_character(),
Duration = col_character()))
bd$Title = gsub('的生日', '', bd$Title)
bd$bdate = as.Date(bd$Start, format = "%m/%d")
bd$bmonth = format(bd$bdate, '%m')
bd$bday = format(bd$bdate, '%d')
View(bd)
my_bd = subset(bd, bd$Title == '王毅俊')$bdate
same_bd = subset(bd, bd$date == my_bd)$Title # 2, Sin Chang
same_bd = subset(bd, bd$bdate == my_bd)$Title # 2, Sin Chang
table(bd$bmonth) # Oct
table(bd$bday)
library(readr)
indicator_age_of_marriage <- read_csv("G:/baiduDrive/online_course/udacity/DA/lessons/07_03_探索单一变量/codes/indicator age of marriage.csv")
View(indicator_age_of_marriage)
md = read_csv("indicator age of marriage.csv")
dim(md)
str(md)
qplot(x = '2005', data = subset(md, !is.na(md$'2005')))
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'count', binwidth=0.5)
md = read.csv('indicator age of marriage.csv', header = T, row.names = 1, check.names = F)
data_1 = subset(md, !is.na(md$'2005'))
dim(md)
str(md)
summary(md$'2005')
ggplot(aes(x = '2005'), data = subset(md, !is.na(md$'2005'))) +
geom_histogram(stat = 'count', binwidth=0.5)
library(ggplot2)
library(readr)
bd = read_csv("bd.csv",
col_types = cols(End = col_character(),
Start = col_character(),
Duration = col_character()))
bd$Title = gsub('的生日', '', bd$Title)
bd$bdate = as.Date(bd$Start, format = "%m/%d")
bd$bmonth = format(bd$bdate, '%m')
bd$bday = format(bd$bdate, '%d')
# How many people share your birthday? Do you know them?
my_bd = subset(bd, bd$Title == '王毅俊')$bdate
same_bd = subset(bd, bd$bdate == my_bd)$Title # 2, Sin Chang
# Which month contains the most number of birthdays?
table(bd$bmonth) # Oct
# Which day of the year has the most number of birthdays?
table(bd$bday) # 24
qplot(x = bmonth, data = bd)
qplot(x = bday, data = bd)
qplot(x = bmonth, data = bd)
qplot(x = bday, data = bd)
