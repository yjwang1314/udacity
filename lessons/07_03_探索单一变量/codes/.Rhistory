xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_lot10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly',
color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'Likes Count',
ylab = 'Proportion of Users with that likes count',
geom = 'freqpoly',
color = gender) +
scale_x_continuous() +
scale_x_log10()
pf$gender = 'male'
pf = read.csv('pseudo_facebook.tsv', sep='\t')
View(pf)
pf$gender is 'male'
pf$gender == 'male'
pf[pf$gender == 'male']
subset(pf, pf$gender == 'male')
summary(subset(pf, pf$gender == 'male'))
table(subset(pf, pf$gender == 'male'))
by(pf$www_likes, pf$gender, summary)
table(pf$gender)
sum(pf$gender == 'male')
pf$gender == 'male'
len(pf$gender == 'male')
lengh(pf$gender == 'male')
length(pf$gender == 'male')
subset(pf, pf$gender == 'male')
subset(pf, pf$gender == 'male')$www_likes
by(pf$www_likes, pf$gender, sum)
by(pf$www_likes, pf$gender, sum)
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
grid.arrange(p1, p2, p3, p4, ncol = 2)
p1 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
p2 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
p3 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
p4 = qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
grid.arrange(p1, p2, p3, p4, ncol = 2)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
names(pf)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$gender, pf$friendships_initiated, summary)
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in = NA
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
summary(pf$mobile_check_in)
pf$mobile_check_in = factor(pf$mobile_check_in)
pf$mobile_check_in = factor(pf$mobile_check_in)# factor转换数据为字符型或数字型，用作比较
summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
mobile_check_in = NA
mobile_check_in = NA
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in)
pf$mobile_check_in = bool(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = bool(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
sum(pf$mobile_check_in)
pf$mobile_check_in = ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in = factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
length(pf$mobile_check_in)
63947 / length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1) / length(pf$mobile_check_in)
grid.arrange(p1, p2, p3, ncol=2)
p1 = ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=2)
logScale = qplot(x = log10(friend_count+1), data = pf)
countScale = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
view(diamonds)
view(diamonds)
diamonds
names(diamonds)
summary(diamonds)
data(diamonds)
pf = data(diamonds)
length(diamonds)
table(diamonds)
str(diamonds)
dim(diamonds)
str(diamonds)
summary(diamonds)
?diamonds
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds, binwidth = 30)
qplot(x = price, data = diamonds, binwidth = 300)
qplot(x = price, data = diamonds)
summary(diamonds$price)
diamonds$price < 500
length(diamonds$price < 500)
length(diamonds$price < 250)
diamonds[diamonds$price < 250]
subset(diamonds, diamonds$price < 500)
length(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 250))
dim(subset(diamonds, diamonds$price < 250))
diamonds
diamonds$price
str(diamonds)
diamonds$price < 250
dim(subset(diamonds, diamonds$price > 1500))
View(diamonds)
summary(diamonds)
dim(subset(diamonds, diamonds$price >= 1500))
dim(subset(diamonds, diamonds$price <= 500))
dim(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 250))
dim(subset(diamonds, diamonds$price > 1500))
dim(subset(diamonds, diamonds$price >= 1500))
data(diamonds)
?diamonds
??diamonds
?diamonds
?diamonds
data(diamonds)
library(ggplot2)
?diamonds
data(diamonds)
dim(diamonds)
str(diamonds)
View(diamonds)
View(diamonds)
qplot(x = price, data = diamonds)
summary(diamonds$price)
dim(subset(diamonds, diamonds$price < 500))
dim(subset(diamonds, diamonds$price < 250))
dim(subset(diamonds, diamonds$price >= 1500))
getwd()
list.files()
pf = read.csv('pseudo_facebook.tsv', sep='\t')
names(pf) # 查看列表名
# install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
qplot(x = friend_count, data = pf)
qplot(x = price, data = diamonds)
plot(x = price, data = diamonds, xlim = c(0, 5000))
qplot(x = price, data = diamonds, xlim = c(0, 5000))
qplot(x = price, data = diamonds, binwidth) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 50))
qplot(x = price, data = diamonds, binwidth = 10) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 50))
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 50))
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 500))
qplot(x = price, data = diamonds, binwidth = 50) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 500))
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 500))
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 500)) +
facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 500)) +
facet_wrap(~cut, ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 100)) +
facet_wrap(~cut, ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 1000)) +
facet_wrap(~cut, ncol = 2)
summary(diamonds$price)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 18823),
breaks = seq(0, 18823, 1000)) +
facet_wrap(~cut, ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 1000)) +
facet_wrap(~cut, ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 18823),
breaks = seq(0, 18823, 1000)) +
facet_wrap(~cut, ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 1000)) +
facet_wrap(~cut, ncol = 2)
min(diamonds$price)
diamonds$price == min(diamonds$price)
diamonds[diamonds$price == min(diamonds$price)]
diamonds(diamonds$price == min(diamonds$price))
subset(diamonds, diamonds$price == max(diamonds$price))
subset(diamonds, diamonds$price == min(diamonds$price))
subset(diamonds, diamonds$price == min(diamonds$price))
by(diamonds$price, pf$cut, summary)
by(diamonds$price, diamonds$cut, summary)
table(diamonds$cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 100) +
scale_x_continuous(limits = c(0, 5000),
breaks = seq(0, 5000, 1000)) +
facet_wrap(~cut, scales="free_y", ncol = 2)
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price, data = diamonds, binwidth = 100) +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free", space="free")
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free")
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price/carat, data = diamonds, binwidth = 500) +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = price/carat, data = diamonds, binwidth = 500) +
facet_wrap(~cut, scales="free_y", ncol = 2) +
scale_x_log10()
qplot(x = log10(price/carat), data = diamonds, binwidth = 500) +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds) +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram() +
facet_wrap(~cut, scales="free_y", ncol = 2) +
scale_x_log10()
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds, binwidth = 100) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds, binwidth = 50) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds, binwidth = 10) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds, binwidth = 1) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat, binwidth = 1), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y", ncol = 2)
qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot')
qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
library(gridExtra)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 10000))
grid.arrange(p1, p2, p3, ncol = 2)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot')
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot')
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot')
grid.arrange(p1, p2, p3, ncol = 2)
p1 = qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 15000))
p2 = qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 15000))
p3 = qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
grid.arrange(p1, p2, p3, ncol = 2)
qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
by(diamonds$price, diamonds$color, summary)
IQR(subset(diamonds, color == 'D')$price)
4214-911
IQR(subset(diamonds, color == 'J')$price)
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 17000))
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot')
qplot(x = price, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = carat)
qplot(x = carat, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = cut)
qplot(x = carat, y = ..count..,
data = diamonds,
xlab = 'carat',
ylab = 'count',
binwidth = 10,
geom = 'freqpoly',
color = color)
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot')
qplot(x = color, y = price/carat,
data = diamonds)
qplot(x = carat,
data = diamonds)
qplot(x = carat, data = diamonds)
qplot(x = carat, data = diamonds, binwidth = 0.1)
qplot(x = carat, data = diamonds, binwidth = 0.01)
qplot(x = carat, data = diamonds, binwidth = 0.1)
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 100))
seq(0, 5, 100)
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.1))
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
qplot(x = carat, data = diamonds, binwidth = 0.01) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
qplot(x = carat, data = diamonds, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
table(diamonds$carat)
